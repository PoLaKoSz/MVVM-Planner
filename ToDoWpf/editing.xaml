<Window x:Class="ToDoWpf.editing"
       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToDoWpf"
        mc:Ignorable="d"
        Title="Add" Height="200" Width="500" MinHeight="150" MinWidth="400" 
        MaxHeight="300" MaxWidth="700" ShowInTaskbar="False"
        ResizeMode="CanResizeWithGrip" WindowStartupLocation="CenterScreen" 
        WindowStyle="None" AllowsTransparency="True" Background="Transparent" KeyDown="Window_KeyDown">
    <Window.Resources>
        <ControlTemplate x:Key="ExitButton">
            <Grid x:Name="ExitBar" MouseLeftButtonDown="ExitBar_MouseLeftButtonDown"
                  ToolTip="Exit" Background="Transparent" Height="18" Width="18" Cursor="Hand">
                <Line x:Name="ExitLine1" StrokeStartLineCap="Round" 
                  StrokeEndLineCap="Round"
                  X1="2" Y1="2" X2="16" Y2="16" 
                  Stroke="#4E4E50" StrokeThickness="3">
                </Line>
                <Line x:Name="ExitLine2" StrokeStartLineCap="Round" 
                  StrokeEndLineCap="Round" 
                  X1="16" Y1="2" X2="2" Y2="16" 
                  Stroke="#4E4E50" StrokeThickness="3">
                </Line>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ExitBar" Property="Grid.Width" Value="20"/>
                    <Setter TargetName="ExitBar" Property="Grid.Height" Value="20"/>
                    <Setter TargetName="ExitLine1" Property="Line.Stroke" Value="#E91D14"/>
                    <Setter TargetName="ExitLine2" Property="Line.Stroke" Value="#E91D14"/>
                    <Setter TargetName="ExitLine1" Property="Line.X2" Value="18"/>
                    <Setter TargetName="ExitLine1" Property="Line.Y2" Value="18"/>
                    <Setter TargetName="ExitLine2" Property="Line.X1" Value="18"/>
                    <Setter TargetName="ExitLine2" Property="Line.Y2" Value="18"/>
                    <Setter TargetName="ExitLine1" Property="Line.StrokeThickness" Value="3.5"/>
                    <Setter TargetName="ExitLine2" Property="Line.StrokeThickness" Value="3.5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="CheckButton">
            <Grid  x:Name="EditButton" MouseLeftButtonDown="EditButton_MouseLeftButtonDown"
                   Background="Transparent" Cursor="Hand"
               Height="18" Width="18" VerticalAlignment="Center">
                <Line x:Name="CheckLine1" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                  X1="2" Y1="8" X2="8" Y2="16" 
                  StrokeThickness="3" Stroke="#4E4E50">
                </Line>
                <Line x:Name="CheckLine2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                  X1="8" Y1="16" X2="16" Y2="2" 
                  Stroke="#4E4E50" StrokeThickness="3">
                </Line>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="CheckLine1" Property="Line.Stroke" Value="#4EC375"/>
                    <Setter TargetName="CheckLine2" Property="Line.Stroke" Value="#4EC375"/>
                    <Setter TargetName="EditButton" Property="Width" Value="20"/>
                    <Setter TargetName="EditButton" Property="Height" Value="20"/>
                    <Setter TargetName="CheckLine1" Property="Line.X1" Value="2"/>
                    <Setter TargetName="CheckLine1" Property="Line.X2" Value="8"/>
                    <Setter TargetName="CheckLine1" Property="Line.Y2" Value="18"/>
                    <Setter TargetName="CheckLine2" Property="Line.X2" Value="18"/>
                    <Setter TargetName="CheckLine2" Property="Line.Y2" Value="2"/>
                    <Setter TargetName="CheckLine2" Property="Line.X1" Value="8"/>
                    <Setter TargetName="CheckLine2" Property="Line.Y1" Value="18"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Border BorderBrush="Transparent" BorderThickness="1" CornerRadius="4 4 4 4">
        <Border.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#719EC8" Offset="0" />
                <GradientStop Color="#E1F0FE" Offset="0.5"/>
                <GradientStop Color="#D2C9C0" Offset="1" />
            </LinearGradientBrush>
        </Border.Background>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="35"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Name="TopBar" MouseLeftButtonDown="TopBar_MouseLeftButtonDown" Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition Height="24"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="24"></ColumnDefinition>
                    <ColumnDefinition Width="13"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Control Template="{StaticResource ExitButton}" Grid.Row="1" Grid.Column="1"
                    HorizontalAlignment="Center" VerticalAlignment="Center" ></Control>
            </Grid>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="60"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Control Template="{StaticResource CheckButton}" Grid.Row="2" Grid.Column="1"></Control>
                <Label x:Name="DateLabel" Grid.Column="0" Grid.Row="1" Height="35" Margin="10 0 0 0"
                       HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" FontFamily="Comic Sans Ms" FontWeight="Bold" FontSize="14">
                    <Label.Foreground>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <GradientStop Color="#383838" Offset="0" />
                            <GradientStop Color="#4E4E50" Offset="1.0" />
                        </LinearGradientBrush>
                    </Label.Foreground>
                </Label>
                <Label Grid.Row="2" Grid.Column="2" HorizontalAlignment="Right" 
                         Margin="0 0 5 0" Background="Transparent" FontSize="12" FontFamily="Yu Gothic UI Semibold"
                         VerticalContentAlignment="Center" Foreground="#8A8886">[Enter] - submit editing</Label>
            </Grid>
            <Grid Grid.Row="0" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
                <Label FontSize="18" HorizontalAlignment="Center" Content="Edit" VerticalAlignment="Center" FontFamily="Tahoma" FontWeight="Bold" >
                    <Label.Foreground>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <GradientStop Color="#383838" Offset="0" />
                            <GradientStop Color="#4E4E50" Offset="1.0" />
                        </LinearGradientBrush>
                    </Label.Foreground>
                </Label>
            </Grid>
            <Border Margin="10 0 120 0" HorizontalAlignment="Stretch"  Background="#FFF8FF"
                VerticalAlignment="Stretch" Grid.Row="1" CornerRadius="4 4 4 4" BorderThickness="1" BorderBrush="Transparent"
                    >
                <TextBox x:Name="TextInput" BorderThickness="0" Margin="4 4 4 4"
                 TextWrapping="Wrap"   FontSize="15" Background="Transparent"
                 FontFamily="Comic Sans Ms" FontWeight="Bold" Foreground="#383838"/>
            </Border>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="120"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.3*"/>
                        <RowDefinition Height="0.3*"/>
                        <RowDefinition Height="0.3*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="2" HorizontalAlignment="Center"
                           VerticalAlignment="Center" Cursor="Hand" MouseLeftButtonDown="DeleteTask_MouseLeftButtonDown">
                        <TextBlock x:Name="Delete"
                                FontFamily="Comic Sans Ms" FontWeight="Bold" Foreground="#A80000"  Text="Delete" >
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="15"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="FontSize" Value="16"></Setter>
                                        </Trigger>
                                        <EventTrigger RoutedEvent="Window.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard AutoReverse="True" RepeatBehavior="Forever">
                                                    <ColorAnimation  Duration="0:0:2" To="Red" AutoReverse="True"
                                                 Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                           
                        
                    
                        </TextBlock>
                    </Grid>
                    <Grid Grid.Row="1" HorizontalAlignment="Center"
                           VerticalAlignment="Center" Cursor="Hand" MouseLeftButtonDown="UpdateTime_MouseLeftButtonDown">
                        <TextBlock x:Name="Updatetime"
                 FontFamily="Comic Sans Ms" FontWeight="Bold" Foreground="#4E4E50"  Text="Update Time">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="14"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="FontSize" Value="15"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                    <Grid Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                        <TextBlock x:Name="DoneLabel" Cursor="Hand"
                 FontFamily="Comic Sans Ms" FontWeight="Bold" Foreground="#4E4E50" >
                    <Run x:Name="DoneText" Text="Done" 
                         MouseLeftButtonDown="DoneText_MouseLeftButtonDown"/>/<Run x:Name="NotDoneText" Text="not done" 
                         MouseLeftButtonDown="NotDoneText_MouseLeftButtonDown"/>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="14"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="FontSize" Value="15"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>
